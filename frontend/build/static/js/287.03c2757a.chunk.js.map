{"version":3,"file":"static/js/287.03c2757a.chunk.js","mappings":"uLAwBA,UAf4C,SAAHA,GAA+B,IAAzBC,EAAQD,EAARC,SAAUC,EAAOF,EAAPE,QAC/CC,GAAaC,EAAAA,EAAAA,IAAe,SAACC,GAAK,OAAKA,EAAMC,IAAI,IAAjDH,SACFI,EAAgB,OAARJ,QAAQ,IAARA,OAAQ,EAARA,EAAUI,MAExB,GAAMA,EAAO,CACX,GAAIL,GAAmB,OAARC,QAAQ,IAARA,GAAAA,EAAUD,QACvB,OAAOM,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAR,SAAGA,IACL,IAAKC,EACV,OAAOM,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAR,SAAGA,GAEd,CAEA,OAAOO,EAAAA,EAAAA,KAACE,EAAAA,GAAQ,CAACC,GAAIJ,EAAK,gBAC5B,C","sources":["components/ProtectedRoute.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { useAppSelector } from '../hooks/redux'\r\n\r\ninterface AuthProps {\r\n  children: React.ReactNode\r\n  isAdmin?: boolean\r\n}\r\n\r\nconst ProtectedRoute: React.FC<AuthProps> = ({ children, isAdmin }) => {\r\n  const { userInfo } = useAppSelector((state) => state.auth)\r\n  const token = userInfo?.token\r\n\r\n  if (!!token) {\r\n    if (isAdmin && userInfo?.isAdmin) {\r\n      return <>{children}</>\r\n    } else if (!isAdmin) {\r\n      return <>{children}</>\r\n    }\r\n  }\r\n\r\n  return <Navigate to={token ? `/` : `/sign-in`} />\r\n}\r\n\r\nexport default ProtectedRoute\r\n"],"names":["_ref","children","isAdmin","userInfo","useAppSelector","state","auth","token","_jsx","_Fragment","Navigate","to"],"sourceRoot":""}