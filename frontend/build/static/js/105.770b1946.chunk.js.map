{"version":3,"file":"static/js/105.770b1946.chunk.js","mappings":"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","sources":["pages/SignIn.tsx","schemas/index.tsx","utils/formValues.tsx"],"sourcesContent":["import { useFormik } from 'formik'\r\nimport React from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { signInValues } from '../utils/formValues'\r\nimport { signInShema } from '../schemas'\r\nimport { useLoginMutation } from '../store/api/user.api'\r\nimport { ILogin } from '../models/models'\r\nimport { toast } from 'react-toastify'\r\nimport { useActions } from '../hooks/action'\r\n\r\nconst SignIn: React.FC = () => {\r\n  const navigate = useNavigate()\r\n  const { setUserInfo } = useActions()\r\n  const [login] = useLoginMutation()\r\n  const onSubmitHandler = (values: ILogin) => {\r\n    login({ username: values.email, password: values.password })\r\n      .unwrap()\r\n      .then((response) => {\r\n        setUserInfo(response)\r\n        toast.success(`${response.name} successfull logged in!`)\r\n        navigate(`/`)\r\n      })\r\n      .catch((error) => {\r\n        toast.error(`Incorrect login or password`)\r\n        console.log('Login error:', error)\r\n      })\r\n  }\r\n  const signInForm = useFormik({\r\n    initialValues: signInValues,\r\n    onSubmit: onSubmitHandler,\r\n    validationSchema: signInShema,\r\n  })\r\n  const { values, handleChange, handleSubmit, errors, touched } = signInForm\r\n  return (\r\n    <div className=\"form-box\">\r\n      <h2 className=\"title\">Sign In</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"\">Email Address</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            placeholder=\"Enter email\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n          />\r\n          <p className=\"error\">\r\n            {errors.email && touched.email && errors.email}\r\n          </p>\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"input\"\r\n            placeholder=\"Enter password\"\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n          />\r\n          <p className=\"error\">\r\n            {errors.password && touched.password && errors.password}\r\n          </p>\r\n        </div>\r\n        <button className=\"button\" type=\"submit\">\r\n          Sing In\r\n        </button>\r\n      </form>\r\n      <p className=\"mt-6\">\r\n        New Customer?{' '}\r\n        <Link to={`/sign-up`} className=\"underline\">\r\n          Sign Up\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignIn\r\n","import * as yup from 'yup'\r\n\r\nexport const signInShema = yup.object().shape({\r\n  email: yup.string().required('Email is required').email('Invalide email'),\r\n  password: yup\r\n    .string()\r\n    .required('Password is required')\r\n    .min(8, 'Password min 8'),\r\n})\r\n\r\nexport const signUpShema = yup.object().shape({\r\n  name: yup.string().required('Name is required'),\r\n  email: yup.string().required('Email is required').email('Invalide email'),\r\n  password: yup\r\n    .string()\r\n    .required('Password is required')\r\n    .min(8, 'Password min 8'),\r\n  rePassword: yup\r\n    .string()\r\n    .required('Confirm Password is required')\r\n    .oneOf([yup.ref('password')], 'Passwords must match'),\r\n})\r\n\r\nexport const shippingShema = yup.object().shape({\r\n  address: yup.string().required('Address is required'),\r\n  city: yup.string().required('City is required'),\r\n  postalCode: yup.number().required('Postal Code is required'),\r\n  country: yup.string().required('Country is required'),\r\n})\r\n\r\nexport const paymentMethodShema = yup.object().shape({\r\n  paymentMethod: yup.string().required('Payment method is required'),\r\n})\r\n\r\nexport const updateProfileShema = yup.object().shape({\r\n  name: yup.string(),\r\n  email: yup.string().email('Invalide email'),\r\n  password: yup.string().min(8, 'Password min 8'),\r\n  rePassword: yup.string().oneOf([yup.ref('password')], 'Passwords must match'),\r\n})\r\n\r\nexport const editUserShema = yup.object().shape({\r\n  name: yup.string(),\r\n  email: yup.string().email('Invalide email'),\r\n  isAdmin: yup.boolean(),\r\n})\r\n\r\nexport const leaveReviewShema = yup.object().shape({\r\n  rating: yup.number().required('Rating is required!'),\r\n  comment: yup.string(),\r\n})\r\n\r\nexport const createProductShema = yup.object().shape({\r\n  name: yup.string().required('Name is required'),\r\n  category: yup.string().required('Category is required'),\r\n  description: yup.string().required('Description is required'),\r\n  price: yup.number().required('Price is required'),\r\n  countInStock: yup.number().required('Count in stock is required'),\r\n  brand: yup.string().required('Brand is required'),\r\n  image: yup.string().required('Image is required'),\r\n})\r\n","import {\r\n  ICreateProduct,\r\n  ILeaveReview,\r\n  ILogin,\r\n  IPaymentMethod,\r\n  IRegister,\r\n} from '../models/models'\r\n\r\nexport const signInValues: ILogin = {\r\n  email: '',\r\n  password: '',\r\n}\r\n\r\nexport const signUpValues: IRegister = {\r\n  name: '',\r\n  email: '',\r\n  password: '',\r\n  rePassword: '',\r\n}\r\n\r\nexport const paymentValues: IPaymentMethod = {\r\n  paymentMethod: 'PayPal',\r\n}\r\n\r\nexport const leaveReviewValues: ILeaveReview = {\r\n  comment: '',\r\n  rating: 0,\r\n}\r\n\r\nexport const createProductValues: ICreateProduct = {\r\n  name: '',\r\n  price: '0',\r\n  brand: '',\r\n  category: '',\r\n  description: '',\r\n  countInStock: 0,\r\n  image: null,\r\n}\r\n"],"names":["navigate","useNavigate","setUserInfo","useActions","_useLoginMutation","useLoginMutation","login","_slicedToArray","signInForm","useFormik","initialValues","signInValues","onSubmit","values","username","email","password","unwrap","then","response","toast","concat","name","catch","error","console","log","validationSchema","signInShema","handleChange","handleSubmit","errors","touched","_jsxs","className","children","_jsx","htmlFor","type","placeholder","value","onChange","Link","to","yup","shape","required","min","signUpShema","rePassword","oneOf","shippingShema","address","city","postalCode","country","paymentMethodShema","paymentMethod","updateProfileShema","editUserShema","isAdmin","leaveReviewShema","rating","comment","createProductShema","category","description","price","countInStock","brand","image","signUpValues","paymentValues","createProductValues"],"sourceRoot":""}