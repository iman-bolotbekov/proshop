{"version":3,"file":"static/js/573.64e4db96.chunk.js","mappings":"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","sources":["pages/SignUp.tsx","schemas/index.tsx","utils/formValues.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { useLoginMutation, useRegisterMutation } from '../store/api/user.api'\r\nimport { signUpValues } from '../utils/formValues'\r\nimport { useFormik } from 'formik'\r\nimport { toast } from 'react-toastify'\r\nimport { ILoginData, IRegister, IRegisterData } from '../models/models'\r\nimport { signUpShema } from '../schemas'\r\nimport { useActions } from '../hooks/action'\r\n\r\nconst SignUp: React.FC = () => {\r\n  const navigate = useNavigate()\r\n  const [register] = useRegisterMutation()\r\n  const [login] = useLoginMutation()\r\n  const { setUserInfo } = useActions()\r\n  const onSubmitHandler = (values: IRegister) => {\r\n    register({\r\n      name: values.email,\r\n      email: values.email,\r\n      password: values.password,\r\n    })\r\n      .unwrap()\r\n      .then((response: IRegisterData) => {\r\n        login({ username: response.email, password: values.password })\r\n          .unwrap()\r\n          .then((response: ILoginData) => {\r\n            setUserInfo(response)\r\n            toast.success(`${response.name} successfull logged in!`)\r\n          })\r\n          .catch((error) => {\r\n            console.log('Login error:', error)\r\n          })\r\n        navigate(`/`)\r\n      })\r\n      .catch((error) => {\r\n        if (error.data.detail.includes('UNIQUE')) {\r\n          toast.error('Username already exists')\r\n        }\r\n        console.log('Register error:', error)\r\n      })\r\n  }\r\n  const signUpForm = useFormik({\r\n    initialValues: signUpValues,\r\n    onSubmit: onSubmitHandler,\r\n    validationSchema: signUpShema,\r\n  })\r\n  const { values, handleChange, handleSubmit, errors, touched } = signUpForm\r\n  return (\r\n    <div className=\"form-box\">\r\n      <h2 className=\"title\">Sign Up</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            placeholder=\"Enter name\"\r\n            name=\"name\"\r\n            value={values.name}\r\n            onChange={handleChange}\r\n          />\r\n          <p className=\"error\">{errors.name && touched.name && errors.name}</p>\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"\">Email Address</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            placeholder=\"Enter email\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n          />\r\n          <p className=\"error\">\r\n            {errors.email && touched.email && errors.email}\r\n          </p>\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"input\"\r\n            placeholder=\"Enter password\"\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n          />\r\n          <p className=\"error\">\r\n            {errors.password && touched.password && errors.password}\r\n          </p>\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"\">Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"input\"\r\n            placeholder=\"Enter confirm password\"\r\n            name=\"rePassword\"\r\n            value={values.rePassword}\r\n            onChange={handleChange}\r\n          />\r\n          <p className=\"error\">\r\n            {' '}\r\n            {errors.rePassword && touched.rePassword && errors.rePassword}\r\n          </p>\r\n        </div>\r\n        <button className=\"button\" type=\"submit\">\r\n          Sing Up\r\n        </button>\r\n      </form>\r\n      <p className=\"mt-6\">\r\n        Have an Account?{' '}\r\n        <Link to={`/sign-in`} className=\"underline\">\r\n          Sign In\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n","import * as yup from 'yup'\r\n\r\nexport const signInShema = yup.object().shape({\r\n  email: yup.string().required('Email is required').email('Invalide email'),\r\n  password: yup\r\n    .string()\r\n    .required('Password is required')\r\n    .min(8, 'Password min 8'),\r\n})\r\n\r\nexport const signUpShema = yup.object().shape({\r\n  name: yup.string().required('Name is required'),\r\n  email: yup.string().required('Email is required').email('Invalide email'),\r\n  password: yup\r\n    .string()\r\n    .required('Password is required')\r\n    .min(8, 'Password min 8'),\r\n  rePassword: yup\r\n    .string()\r\n    .required('Confirm Password is required')\r\n    .oneOf([yup.ref('password')], 'Passwords must match'),\r\n})\r\n\r\nexport const shippingShema = yup.object().shape({\r\n  address: yup.string().required('Address is required'),\r\n  city: yup.string().required('City is required'),\r\n  postalCode: yup.number().required('Postal Code is required'),\r\n  country: yup.string().required('Country is required'),\r\n})\r\n\r\nexport const paymentMethodShema = yup.object().shape({\r\n  paymentMethod: yup.string().required('Payment method is required'),\r\n})\r\n\r\nexport const updateProfileShema = yup.object().shape({\r\n  name: yup.string(),\r\n  email: yup.string().email('Invalide email'),\r\n  password: yup.string().min(8, 'Password min 8'),\r\n  rePassword: yup.string().oneOf([yup.ref('password')], 'Passwords must match'),\r\n})\r\n\r\nexport const editUserShema = yup.object().shape({\r\n  name: yup.string(),\r\n  email: yup.string().email('Invalide email'),\r\n  isAdmin: yup.boolean(),\r\n})\r\n\r\nexport const leaveReviewShema = yup.object().shape({\r\n  rating: yup.number().required('Rating is required!'),\r\n  comment: yup.string(),\r\n})\r\n\r\nexport const createProductShema = yup.object().shape({\r\n  name: yup.string().required('Name is required'),\r\n  category: yup.string().required('Category is required'),\r\n  description: yup.string().required('Description is required'),\r\n  price: yup.number().required('Price is required'),\r\n  countInStock: yup.number().required('Count in stock is required'),\r\n  brand: yup.string().required('Brand is required'),\r\n  image: yup.string().required('Image is required'),\r\n})\r\n","import {\r\n  ICreateProduct,\r\n  ILeaveReview,\r\n  ILogin,\r\n  IPaymentMethod,\r\n  IRegister,\r\n} from '../models/models'\r\n\r\nexport const signInValues: ILogin = {\r\n  email: '',\r\n  password: '',\r\n}\r\n\r\nexport const signUpValues: IRegister = {\r\n  name: '',\r\n  email: '',\r\n  password: '',\r\n  rePassword: '',\r\n}\r\n\r\nexport const paymentValues: IPaymentMethod = {\r\n  paymentMethod: 'PayPal',\r\n}\r\n\r\nexport const leaveReviewValues: ILeaveReview = {\r\n  comment: '',\r\n  rating: 0,\r\n}\r\n\r\nexport const createProductValues: ICreateProduct = {\r\n  name: '',\r\n  price: '0',\r\n  brand: '',\r\n  category: '',\r\n  description: '',\r\n  countInStock: 0,\r\n  image: null,\r\n}\r\n"],"names":["navigate","useNavigate","_useRegisterMutation","useRegisterMutation","register","_slicedToArray","_useLoginMutation","useLoginMutation","login","setUserInfo","useActions","signUpForm","useFormik","initialValues","signUpValues","onSubmit","values","name","email","password","unwrap","then","response","username","toast","concat","catch","error","console","log","data","detail","includes","validationSchema","signUpShema","handleChange","handleSubmit","errors","touched","_jsxs","className","children","_jsx","htmlFor","type","placeholder","value","onChange","rePassword","Link","to","signInShema","yup","shape","required","min","oneOf","shippingShema","address","city","postalCode","country","paymentMethodShema","paymentMethod","updateProfileShema","editUserShema","isAdmin","leaveReviewShema","rating","comment","createProductShema","category","description","price","countInStock","brand","image","signInValues","paymentValues","createProductValues"],"sourceRoot":""}