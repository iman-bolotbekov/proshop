{"version":3,"file":"static/js/983.ad893bd2.chunk.js","mappings":"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","sources":["pages/AdminProductCreate.tsx","schemas/index.tsx","utils/formValues.tsx"],"sourcesContent":["import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { createProductValues } from '../utils/formValues'\r\nimport { FormikHelpers, useFormik } from 'formik'\r\nimport { toast } from 'react-toastify'\r\nimport { ICreateProduct } from '../models/models'\r\nimport { createProductShema } from '../schemas'\r\nimport { useCreateProductMutation } from '../store/api/product.api'\r\n\r\nconst AdminProductCreate: React.FC = () => {\r\n  const navigate = useNavigate()\r\n  const [createProduct] = useCreateProductMutation()\r\n  const onSubmitHandler = (\r\n    values: ICreateProduct,\r\n    action: FormikHelpers<ICreateProduct>\r\n  ) => {\r\n    const formData = new FormData()\r\n    formData.append('name', values.name)\r\n    formData.append('price', JSON.stringify(values.price))\r\n    formData.append('category', values.category)\r\n    formData.append('brand', values.brand)\r\n    formData.append('description', values.description)\r\n    formData.append('countInStock', JSON.stringify(values.countInStock))\r\n    if (values.image) formData.append('image', values.image)\r\n    createProduct(formData)\r\n      .unwrap()\r\n      .then((response) => {\r\n        action.resetForm()\r\n        toast.success('Product created successfully')\r\n        navigate(`/admin/product/`)\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Product create error:`, error)\r\n      })\r\n  }\r\n  const createProductForm = useFormik({\r\n    initialValues: createProductValues,\r\n    onSubmit: onSubmitHandler,\r\n    validationSchema: createProductShema,\r\n  })\r\n  const { values, handleChange, handleSubmit, errors, touched } =\r\n    createProductForm\r\n  return (\r\n    <div className=\"form-box\">\r\n      <h2 className=\"title\">Create Product</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            placeholder=\"Enter name\"\r\n            name=\"name\"\r\n            value={values.name}\r\n            onChange={handleChange}\r\n          />\r\n          <p className=\"error\">{errors.name && touched.name && errors.name}</p>\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"\">Price</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"input\"\r\n            placeholder=\"Enter price\"\r\n            name=\"price\"\r\n            value={values.price}\r\n            onChange={handleChange}\r\n          />\r\n          <p className=\"error\">\r\n            {errors.price && touched.price && errors.price}\r\n          </p>\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"\">Brand</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            placeholder=\"Enter brand\"\r\n            name=\"brand\"\r\n            value={values.brand}\r\n            onChange={handleChange}\r\n          />\r\n          <p className=\"error\">\r\n            {errors.brand && touched.brand && errors.brand}\r\n          </p>\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"\">Category</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            placeholder=\"Enter category\"\r\n            name=\"category\"\r\n            value={values.category}\r\n            onChange={handleChange}\r\n          />\r\n          <p className=\"error\">\r\n            {errors.category && touched.category && errors.category}\r\n          </p>\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"\">Description</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            placeholder=\"Enter description\"\r\n            name=\"description\"\r\n            value={values.description}\r\n            onChange={handleChange}\r\n          />\r\n          <p className=\"error\">\r\n            {errors.description && touched.description && errors.description}\r\n          </p>\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"\">Count in stock</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"input\"\r\n            placeholder=\"Enter countInStock\"\r\n            name=\"countInStock\"\r\n            value={values.countInStock}\r\n            onChange={handleChange}\r\n          />\r\n          <p className=\"error\">\r\n            {errors.countInStock && touched.countInStock && errors.countInStock}\r\n          </p>\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"\">Image</label>\r\n          <input\r\n            className=\"formInputFile\"\r\n            type=\"file\"\r\n            name=\"images\"\r\n            accept=\".jpg,.png,.jpeg\"\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n              const files = event.target.files\r\n              if (files) {\r\n                const fileList = Array.from(files)\r\n                createProductForm.setFieldValue('image', fileList[0])\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n        <button className=\"button\" type=\"submit\">\r\n          Create Product\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminProductCreate\r\n","import * as yup from 'yup'\r\n\r\nexport const signInShema = yup.object().shape({\r\n  email: yup.string().required('Email is required').email('Invalide email'),\r\n  password: yup\r\n    .string()\r\n    .required('Password is required')\r\n    .min(8, 'Password min 8'),\r\n})\r\n\r\nexport const signUpShema = yup.object().shape({\r\n  name: yup.string().required('Name is required'),\r\n  email: yup.string().required('Email is required').email('Invalide email'),\r\n  password: yup\r\n    .string()\r\n    .required('Password is required')\r\n    .min(8, 'Password min 8'),\r\n  rePassword: yup\r\n    .string()\r\n    .required('Confirm Password is required')\r\n    .oneOf([yup.ref('password')], 'Passwords must match'),\r\n})\r\n\r\nexport const shippingShema = yup.object().shape({\r\n  address: yup.string().required('Address is required'),\r\n  city: yup.string().required('City is required'),\r\n  postalCode: yup.number().required('Postal Code is required'),\r\n  country: yup.string().required('Country is required'),\r\n})\r\n\r\nexport const paymentMethodShema = yup.object().shape({\r\n  paymentMethod: yup.string().required('Payment method is required'),\r\n})\r\n\r\nexport const updateProfileShema = yup.object().shape({\r\n  name: yup.string(),\r\n  email: yup.string().email('Invalide email'),\r\n  password: yup.string().min(8, 'Password min 8'),\r\n  rePassword: yup.string().oneOf([yup.ref('password')], 'Passwords must match'),\r\n})\r\n\r\nexport const editUserShema = yup.object().shape({\r\n  name: yup.string(),\r\n  email: yup.string().email('Invalide email'),\r\n  isAdmin: yup.boolean(),\r\n})\r\n\r\nexport const leaveReviewShema = yup.object().shape({\r\n  rating: yup.number().required('Rating is required!'),\r\n  comment: yup.string(),\r\n})\r\n\r\nexport const createProductShema = yup.object().shape({\r\n  name: yup.string().required('Name is required'),\r\n  category: yup.string().required('Category is required'),\r\n  description: yup.string().required('Description is required'),\r\n  price: yup.number().required('Price is required'),\r\n  countInStock: yup.number().required('Count in stock is required'),\r\n  brand: yup.string().required('Brand is required'),\r\n  image: yup.string().required('Image is required'),\r\n})\r\n","import {\r\n  ICreateProduct,\r\n  ILeaveReview,\r\n  ILogin,\r\n  IPaymentMethod,\r\n  IRegister,\r\n} from '../models/models'\r\n\r\nexport const signInValues: ILogin = {\r\n  email: '',\r\n  password: '',\r\n}\r\n\r\nexport const signUpValues: IRegister = {\r\n  name: '',\r\n  email: '',\r\n  password: '',\r\n  rePassword: '',\r\n}\r\n\r\nexport const paymentValues: IPaymentMethod = {\r\n  paymentMethod: 'PayPal',\r\n}\r\n\r\nexport const leaveReviewValues: ILeaveReview = {\r\n  comment: '',\r\n  rating: 0,\r\n}\r\n\r\nexport const createProductValues: ICreateProduct = {\r\n  name: '',\r\n  price: '0',\r\n  brand: '',\r\n  category: '',\r\n  description: '',\r\n  countInStock: 0,\r\n  image: null,\r\n}\r\n"],"names":["navigate","useNavigate","_useCreateProductMuta","useCreateProductMutation","createProduct","_slicedToArray","createProductForm","useFormik","initialValues","createProductValues","onSubmit","values","action","formData","FormData","append","name","JSON","stringify","price","category","brand","description","countInStock","image","unwrap","then","response","resetForm","toast","catch","error","console","log","validationSchema","createProductShema","handleChange","handleSubmit","errors","touched","_jsxs","className","children","_jsx","htmlFor","type","placeholder","value","onChange","accept","event","files","target","fileList","Array","from","setFieldValue","signInShema","yup","shape","email","required","password","min","signUpShema","rePassword","oneOf","shippingShema","address","city","postalCode","country","paymentMethodShema","paymentMethod","updateProfileShema","editUserShema","isAdmin","leaveReviewShema","rating","comment","signInValues","signUpValues","paymentValues"],"sourceRoot":""}