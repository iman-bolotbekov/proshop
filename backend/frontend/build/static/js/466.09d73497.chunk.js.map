{"version":3,"file":"static/js/466.09d73497.chunk.js","mappings":"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","sources":["pages/AdminProductEdit.tsx","schemas/index.tsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { FormikHelpers, useFormik } from 'formik'\r\nimport { toast } from 'react-toastify'\r\nimport { ICreateProduct } from '../models/models'\r\nimport { createProductShema } from '../schemas'\r\nimport {\r\n  useGetProductQuery,\r\n  useUpdateProductMutation,\r\n} from '../store/api/product.api'\r\n\r\nconst AdminProductEdit: React.FC = () => {\r\n  const params = useParams()\r\n  const productId = params.productId ? parseInt(params.productId, 10) : 0\r\n  const { data: product } = useGetProductQuery(productId)\r\n  const navigate = useNavigate()\r\n  const [updateProduct] = useUpdateProductMutation()\r\n  const onSubmitHandler = (\r\n    values: ICreateProduct,\r\n    action: FormikHelpers<ICreateProduct>\r\n  ) => {\r\n    const formData = new FormData()\r\n    formData.append('name', values.name)\r\n    formData.append('price', JSON.stringify(values.price))\r\n    formData.append('category', values.category)\r\n    formData.append('brand', values.brand)\r\n    formData.append('description', values.description)\r\n    formData.append('countInStock', JSON.stringify(values.countInStock))\r\n    if (values.image) formData.append('image', values.image)\r\n    updateProduct({ product: formData, productId })\r\n      .unwrap()\r\n      .then((response) => {\r\n        toast.success('Product updated successfully')\r\n        navigate(`/admin/product/`)\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Product update error:`, error)\r\n      })\r\n  }\r\n  const editProductForm = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      price: '',\r\n      brand: '',\r\n      category: '',\r\n      description: '',\r\n      countInStock: 0,\r\n      image: null,\r\n    } as ICreateProduct,\r\n    onSubmit: onSubmitHandler,\r\n    validationSchema: createProductShema,\r\n  })\r\n  const { values, handleChange, handleSubmit, errors, touched, setValues } =\r\n    editProductForm\r\n  useEffect(() => {\r\n    if (product) {\r\n      setValues({\r\n        name: product.name,\r\n        price: product.price,\r\n        brand: product.brand,\r\n        category: product.category,\r\n        description: product.description,\r\n        countInStock: product.countInStock,\r\n        image: null,\r\n      })\r\n    }\r\n  }, [setValues, product])\r\n  return (\r\n    <div className=\"form-box\">\r\n      <h2 className=\"title\">Edit Product</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            placeholder=\"Enter name\"\r\n            name=\"name\"\r\n            value={values.name}\r\n            onChange={handleChange}\r\n          />\r\n          <p className=\"error\">{errors.name && touched.name && errors.name}</p>\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"\">Price</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"input\"\r\n            placeholder=\"Enter price\"\r\n            name=\"price\"\r\n            value={values.price}\r\n            onChange={handleChange}\r\n          />\r\n          <p className=\"error\">\r\n            {errors.price && touched.price && errors.price}\r\n          </p>\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"\">Brand</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            placeholder=\"Enter brand\"\r\n            name=\"brand\"\r\n            value={values.brand}\r\n            onChange={handleChange}\r\n          />\r\n          <p className=\"error\">\r\n            {errors.brand && touched.brand && errors.brand}\r\n          </p>\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"\">Category</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            placeholder=\"Enter category\"\r\n            name=\"category\"\r\n            value={values.category}\r\n            onChange={handleChange}\r\n          />\r\n          <p className=\"error\">\r\n            {errors.category && touched.category && errors.category}\r\n          </p>\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"\">Description</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            placeholder=\"Enter description\"\r\n            name=\"description\"\r\n            value={values.description}\r\n            onChange={handleChange}\r\n          />\r\n          <p className=\"error\">\r\n            {errors.description && touched.description && errors.description}\r\n          </p>\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"\">Count in stock</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"input\"\r\n            placeholder=\"Enter countInStock\"\r\n            name=\"countInStock\"\r\n            value={values.countInStock}\r\n            onChange={handleChange}\r\n          />\r\n          <p className=\"error\">\r\n            {errors.countInStock && touched.countInStock && errors.countInStock}\r\n          </p>\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"\">Image</label>\r\n          <input\r\n            className=\"formInputFile\"\r\n            type=\"file\"\r\n            name=\"images\"\r\n            accept=\".jpg,.png,.jpeg\"\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n              const files = event.target.files\r\n              if (files) {\r\n                const fileList = Array.from(files)\r\n                editProductForm.setFieldValue('image', fileList[0])\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n        <button className=\"button\" type=\"submit\">\r\n          Edit Product\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminProductEdit\r\n","import * as yup from 'yup'\r\n\r\nexport const signInShema = yup.object().shape({\r\n  email: yup.string().required('Email is required').email('Invalide email'),\r\n  password: yup\r\n    .string()\r\n    .required('Password is required')\r\n    .min(8, 'Password min 8'),\r\n})\r\n\r\nexport const signUpShema = yup.object().shape({\r\n  name: yup.string().required('Name is required'),\r\n  email: yup.string().required('Email is required').email('Invalide email'),\r\n  password: yup\r\n    .string()\r\n    .required('Password is required')\r\n    .min(8, 'Password min 8'),\r\n  rePassword: yup\r\n    .string()\r\n    .required('Confirm Password is required')\r\n    .oneOf([yup.ref('password')], 'Passwords must match'),\r\n})\r\n\r\nexport const shippingShema = yup.object().shape({\r\n  address: yup.string().required('Address is required'),\r\n  city: yup.string().required('City is required'),\r\n  postalCode: yup.number().required('Postal Code is required'),\r\n  country: yup.string().required('Country is required'),\r\n})\r\n\r\nexport const paymentMethodShema = yup.object().shape({\r\n  paymentMethod: yup.string().required('Payment method is required'),\r\n})\r\n\r\nexport const updateProfileShema = yup.object().shape({\r\n  name: yup.string(),\r\n  email: yup.string().email('Invalide email'),\r\n  password: yup.string().min(8, 'Password min 8'),\r\n  rePassword: yup.string().oneOf([yup.ref('password')], 'Passwords must match'),\r\n})\r\n\r\nexport const editUserShema = yup.object().shape({\r\n  name: yup.string(),\r\n  email: yup.string().email('Invalide email'),\r\n  isAdmin: yup.boolean(),\r\n})\r\n\r\nexport const leaveReviewShema = yup.object().shape({\r\n  rating: yup.number().required('Rating is required!'),\r\n  comment: yup.string(),\r\n})\r\n\r\nexport const createProductShema = yup.object().shape({\r\n  name: yup.string().required('Name is required'),\r\n  category: yup.string().required('Category is required'),\r\n  description: yup.string().required('Description is required'),\r\n  price: yup.number().required('Price is required'),\r\n  countInStock: yup.number().required('Count in stock is required'),\r\n  brand: yup.string().required('Brand is required'),\r\n  image: yup.string().required('Image is required'),\r\n})\r\n"],"names":["params","useParams","productId","parseInt","product","useGetProductQuery","data","navigate","useNavigate","_useUpdateProductMuta","useUpdateProductMutation","updateProduct","_slicedToArray","editProductForm","useFormik","initialValues","name","price","brand","category","description","countInStock","image","onSubmit","values","action","formData","FormData","append","JSON","stringify","unwrap","then","response","toast","catch","error","console","log","validationSchema","createProductShema","handleChange","handleSubmit","errors","touched","setValues","useEffect","_jsxs","className","children","_jsx","htmlFor","type","placeholder","value","onChange","accept","event","files","target","fileList","Array","from","setFieldValue","signInShema","yup","shape","email","required","password","min","signUpShema","rePassword","oneOf","shippingShema","address","city","postalCode","country","paymentMethodShema","paymentMethod","updateProfileShema","editUserShema","isAdmin","leaveReviewShema","rating","comment"],"sourceRoot":""}