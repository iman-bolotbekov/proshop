{"version":3,"file":"static/js/97.8ec2eb6c.chunk.js","mappings":"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","sources":["components/CheckoutSteps.tsx","pages/Shipping.tsx","schemas/index.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface CheckoutStepsProps {\r\n  step1?: boolean\r\n  step2?: boolean\r\n  step3?: boolean\r\n}\r\n\r\nconst CheckoutSteps: React.FC<CheckoutStepsProps> = ({\r\n  step1,\r\n  step2,\r\n  step3,\r\n}) => {\r\n  return (\r\n    <div className=\"flex flex-row space-x-10 py-5 justify-center\">\r\n      <div>\r\n        {step1 ? (\r\n          <Link to={`/shipping`}>Shipping</Link>\r\n        ) : (\r\n          <div className=\"disabled\">Shipping</div>\r\n        )}\r\n      </div>\r\n      <div>\r\n        {step2 ? (\r\n          <Link to={`/payment`}>Payment</Link>\r\n        ) : (\r\n          <div className=\"disabled\">Payment</div>\r\n        )}\r\n      </div>\r\n      <div>\r\n        {step3 ? (\r\n          <Link to={`/place-order`}>Place Order</Link>\r\n        ) : (\r\n          <div className=\"disabled\">Place Order</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { shippingShema } from '../schemas'\r\nimport { useFormik } from 'formik'\r\nimport { IShipping } from '../models/models'\r\nimport { useActions } from '../hooks/action'\r\nimport { useAppSelector } from '../hooks/redux'\r\n\r\nconst Shipping: React.FC = () => {\r\n  const navigate = useNavigate()\r\n  const { addToShippingAddress } = useActions()\r\n  const { shippingAddress } = useAppSelector((state) => state.cart)\r\n\r\n  const onSubmitHandler = (value: IShipping) => {\r\n    addToShippingAddress({\r\n      address: value.address,\r\n      city: value.city,\r\n      postalCode: value.postalCode,\r\n      country: value.country,\r\n    })\r\n    navigate(`/payment`)\r\n  }\r\n\r\n  const shippingForm = useFormik({\r\n    initialValues: {\r\n      address: shippingAddress.address || '',\r\n      city: shippingAddress.city || '',\r\n      postalCode: shippingAddress.postalCode || '',\r\n      country: shippingAddress.country || '',\r\n    },\r\n    onSubmit: onSubmitHandler,\r\n    validationSchema: shippingShema,\r\n  })\r\n  const { values, handleChange, handleSubmit, errors, touched } = shippingForm\r\n  return (\r\n    <div className=\"form-box\">\r\n      <CheckoutSteps step1 />\r\n      <h2 className=\"title\">Shipping</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"\">Address</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            placeholder=\"Enter address\"\r\n            name=\"address\"\r\n            value={values.address}\r\n            onChange={handleChange}\r\n          />\r\n          <p className=\"error\">\r\n            {errors.address && touched.address && errors.address}\r\n          </p>\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"\">City</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            placeholder=\"Enter city\"\r\n            name=\"city\"\r\n            value={values.city}\r\n            onChange={handleChange}\r\n          />\r\n          <p className=\"error\">{errors.city && touched.city && errors.city}</p>\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"\">Postal Code</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            placeholder=\"Enter postal code\"\r\n            name=\"postalCode\"\r\n            value={values.postalCode}\r\n            onChange={handleChange}\r\n          />\r\n          <p className=\"error\">\r\n            {errors.postalCode && touched.postalCode && errors.postalCode}\r\n          </p>\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"\">Country</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            placeholder=\"Enter country\"\r\n            name=\"country\"\r\n            value={values.country}\r\n            onChange={handleChange}\r\n          />\r\n          <p className=\"error\">\r\n            {errors.country && touched.country && errors.country}\r\n          </p>\r\n        </div>\r\n        <button className=\"button\" type=\"submit\">\r\n          Continue\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Shipping\r\n","import * as yup from 'yup'\r\n\r\nexport const signInShema = yup.object().shape({\r\n  email: yup.string().required('Email is required').email('Invalide email'),\r\n  password: yup\r\n    .string()\r\n    .required('Password is required')\r\n    .min(8, 'Password min 8'),\r\n})\r\n\r\nexport const signUpShema = yup.object().shape({\r\n  name: yup.string().required('Name is required'),\r\n  email: yup.string().required('Email is required').email('Invalide email'),\r\n  password: yup\r\n    .string()\r\n    .required('Password is required')\r\n    .min(8, 'Password min 8'),\r\n  rePassword: yup\r\n    .string()\r\n    .required('Confirm Password is required')\r\n    .oneOf([yup.ref('password')], 'Passwords must match'),\r\n})\r\n\r\nexport const shippingShema = yup.object().shape({\r\n  address: yup.string().required('Address is required'),\r\n  city: yup.string().required('City is required'),\r\n  postalCode: yup.number().required('Postal Code is required'),\r\n  country: yup.string().required('Country is required'),\r\n})\r\n\r\nexport const paymentMethodShema = yup.object().shape({\r\n  paymentMethod: yup.string().required('Payment method is required'),\r\n})\r\n\r\nexport const updateProfileShema = yup.object().shape({\r\n  name: yup.string(),\r\n  email: yup.string().email('Invalide email'),\r\n  password: yup.string().min(8, 'Password min 8'),\r\n  rePassword: yup.string().oneOf([yup.ref('password')], 'Passwords must match'),\r\n})\r\n\r\nexport const editUserShema = yup.object().shape({\r\n  name: yup.string(),\r\n  email: yup.string().email('Invalide email'),\r\n  isAdmin: yup.boolean(),\r\n})\r\n\r\nexport const leaveReviewShema = yup.object().shape({\r\n  rating: yup.number().required('Rating is required!'),\r\n  comment: yup.string(),\r\n})\r\n\r\nexport const createProductShema = yup.object().shape({\r\n  name: yup.string().required('Name is required'),\r\n  category: yup.string().required('Category is required'),\r\n  description: yup.string().required('Description is required'),\r\n  price: yup.number().required('Price is required'),\r\n  countInStock: yup.number().required('Count in stock is required'),\r\n  brand: yup.string().required('Brand is required'),\r\n  image: yup.string().required('Image is required'),\r\n})\r\n"],"names":["_ref","step1","step2","step3","_jsxs","className","children","_jsx","Link","to","navigate","useNavigate","addToShippingAddress","useActions","shippingAddress","useAppSelector","state","cart","shippingForm","useFormik","initialValues","address","city","postalCode","country","onSubmit","value","validationSchema","shippingShema","values","handleChange","handleSubmit","errors","touched","CheckoutSteps","htmlFor","type","placeholder","name","onChange","signInShema","yup","shape","email","required","password","min","signUpShema","rePassword","oneOf","paymentMethodShema","paymentMethod","updateProfileShema","editUserShema","isAdmin","leaveReviewShema","rating","comment","createProductShema","category","description","price","countInStock","brand","image"],"sourceRoot":""}