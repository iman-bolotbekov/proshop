{"version":3,"file":"static/js/351.d8d7215d.chunk.js","mappings":"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","sources":["components/OrderItem.tsx","components/UI/Spinner/Spinner.tsx","pages/Order.tsx"],"sourcesContent":["import React from 'react'\r\nimport { ICartItem } from '../models/models'\r\n\r\ninterface OrderItemProps {\r\n  orderItem: ICartItem\r\n}\r\n\r\nconst OrderItem: React.FC<OrderItemProps> = ({ orderItem }) => {\r\n  return (\r\n    <div className=\"lg:my-4 lg:pl-10\">\r\n      <div className=\"flex items-center flex-col space-y-6 lg:flex-row lg:space-x-16\">\r\n        <img\r\n          src={`${orderItem.image}`}\r\n          alt={`${orderItem.name}`}\r\n          className=\"rounded-lg w-[26rem] lg:w-[3rem]\"\r\n        />\r\n        <div className=\"\">{orderItem.name}</div>\r\n        <p>\r\n          {orderItem.qty} X ${orderItem.price} = $\r\n          {(+orderItem.price * orderItem.qty).toFixed(2)}\r\n        </p>\r\n        <div className=\"line\"></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderItem\r\n","import React from 'react'\r\nimport { ImSpinner2 } from 'react-icons/im'\r\n\r\nconst Spinner: React.FC = () => {\r\n  return (\r\n    <div className=\"flex justify-center my-10\">\r\n      <ImSpinner2 className=\"animate-spin text-6xl\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner\r\n","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useAppSelector } from '../hooks/redux'\r\nimport { useGetOrderQuery, usePayOrderMutation } from '../store/api/order.api'\r\nimport OrderItem from '../components/OrderItem'\r\nimport Spinner from '../components/UI/Spinner/Spinner'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst Order: React.FC = () => {\r\n  const params = useParams()\r\n  const { userInfo } = useAppSelector((state) => state.auth)\r\n  const orderId = params.orderId ? parseInt(params.orderId, 10) : 0\r\n  const { data: order, isLoading: orderIsLoading } = useGetOrderQuery(orderId)\r\n  const [payOder] = usePayOrderMutation()\r\n  const onPayOrder = (orderId: number) => {\r\n    payOder(orderId)\r\n      .unwrap()\r\n      .then((_) => {\r\n        toast.success('Payment success!')\r\n      })\r\n      .catch((error) => {\r\n        toast.error(`Didn't paid, error is occured!`)\r\n        console.log('Pay error:', error)\r\n      })\r\n  }\r\n  return (\r\n    <>\r\n      {orderIsLoading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div>\r\n          <h2 className=\"title py-4\">Order:</h2>\r\n          <div className=\"grid grid-cols-1 grid-rows-1 lg:grid-cols-3\">\r\n            <div className=\"px-10 lg:col-span-2\">\r\n              <h2 className=\"title-2\">Shipping</h2>\r\n              <p className={`pb-2`}>\r\n                <span className=\"title-3\">Name:</span> {order?.user.name}\r\n              </p>\r\n              <p className={`pb-2`}>\r\n                <span className=\"title-3\">Email:</span> {order?.user.email}\r\n              </p>\r\n              <p className={`pb-2`}>\r\n                <span className=\"title-3\">Shipping:</span>{' '}\r\n                {order?.shippingAddress.postalCode},{' '}\r\n                {order?.shippingAddress.country}, {order?.shippingAddress.city},{' '}\r\n                {order?.shippingAddress.address}\r\n              </p>\r\n              {!order?.isDelivered ? (\r\n                <div className=\"alert-warning\">Not Delivered</div>\r\n              ) : (\r\n                <div className=\"alert-success\">\r\n                  Delivered on {order.deliveredAt?.substring(0, 10)}\r\n                </div>\r\n              )}\r\n              <div className=\"line\"></div>\r\n              <h2 className=\"title-2 pb-2\">Payment Method</h2>\r\n              <p className=\"pb-2\">\r\n                <span className=\"title-3\">Method:</span>\r\n                {order?.paymentMethod}\r\n              </p>\r\n              {!order?.isPaid ? (\r\n                <div className=\"alert-warning\">Not Paid</div>\r\n              ) : (\r\n                <div className=\"alert-success\">\r\n                  Paid on {order.paidAt?.substring(0, 10)}\r\n                </div>\r\n              )}\r\n              <div className=\"line\"></div>\r\n              <h2 className=\"title-2\">Order Items</h2>\r\n              {order?.orderItems.map((orderItem) => (\r\n                <OrderItem orderItem={orderItem} key={orderItem.id} />\r\n              ))}\r\n            </div>\r\n            <div>\r\n              <div className=\"border border-gray-200 m-10 lg:m-0\">\r\n                <h2 className=\"title-2 px-20 pt-4\">ORDER SUMMARY</h2>\r\n                <div className=\"line\"></div>\r\n                <div className=\"flex justify-between px-8\">\r\n                  <div>Items:</div>\r\n                  <div>\r\n                    $\r\n                    {order?.orderItems.reduce(\r\n                      (prev, item) => prev + +item.price * item.qty,\r\n                      0\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"line\"></div>\r\n                <div className=\"flex justify-between px-8\">\r\n                  <div>Shipping:</div>\r\n                  <div>${order?.shippingPrice}</div>\r\n                </div>\r\n                <div className=\"line\"></div>\r\n                <div className=\"flex justify-between px-8\">\r\n                  <div>Tax:</div>\r\n                  <div>${order?.taxPrice}</div>\r\n                </div>\r\n                <div className=\"line\"></div>\r\n                <div className=\"flex justify-between px-8 pb-4\">\r\n                  <div>Total:</div>\r\n                  <div>${order?.totalPrice}</div>\r\n                </div>\r\n                <div className=\"line\"></div>\r\n                {order?.id && (\r\n                  <div className={`flex px-8 pb-4`}>\r\n                    <button\r\n                      className={`button w-full ${order?.isPaid && 'disabled'}`}\r\n                      onClick={() => onPayOrder(order.id)}\r\n                      disabled={order?.isPaid}\r\n                    >\r\n                      Pay\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Order\r\n"],"names":["_ref","orderItem","_jsx","className","children","_jsxs","src","concat","image","alt","name","qty","price","toFixed","ImSpinner2","_order$deliveredAt","_order$paidAt","params","useParams","orderId","useAppSelector","state","auth","userInfo","parseInt","_useGetOrderQuery","useGetOrderQuery","order","data","orderIsLoading","isLoading","_usePayOrderMutation","usePayOrderMutation","payOder","_slicedToArray","_Fragment","Spinner","user","email","shippingAddress","postalCode","country","city","address","isDelivered","deliveredAt","substring","paymentMethod","isPaid","paidAt","orderItems","map","OrderItem","id","reduce","prev","item","shippingPrice","taxPrice","totalPrice","onClick","unwrap","then","_","toast","catch","error","console","log","onPayOrder","disabled"],"sourceRoot":""}